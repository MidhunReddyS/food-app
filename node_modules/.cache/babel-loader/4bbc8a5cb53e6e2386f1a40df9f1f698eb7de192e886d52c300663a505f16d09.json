{"ast":null,"code":"// import { useState } from \"react\";\n\n// export default function useHttp(){\n\n//     const [error, setError] = useState(null);\n//     const [isLoading, setIsLoading] = useState(false);\n\n//     async function fetchData(requestData, dataHandler){\n//         setIsLoading(true);\n//         try{\n//             const response = await fetch(requestData.link,{\n//                 method: requestData.method ? requestData.method : \"GET\",\n//                 headers: requestData.headers ? requestData.headers: {},\n//                 body: requestData.body ? JSON.stringify({order: requestData.body}): null\n//             })\n//             if(!response.ok){\n//                 throw new error(response.error())\n//             }\n//             const data = await response.json();\n\n//             dataHandler(data);\n//         }\n//         catch(err){\n//             setError(err.message || \"some thing went wrong\")\n//         }\n\n//         setIsLoading(false);\n//     }\n\n//     return ({error, isLoading, fetchData});\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Sanna/Desktop/React-Files/FoodOrderingApp/src/Hooks/useHttp.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// export default function useHttp(){\r\n\r\n//     const [error, setError] = useState(null);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n\r\n//     async function fetchData(requestData, dataHandler){\r\n//         setIsLoading(true);\r\n//         try{\r\n//             const response = await fetch(requestData.link,{\r\n//                 method: requestData.method ? requestData.method : \"GET\",\r\n//                 headers: requestData.headers ? requestData.headers: {},\r\n//                 body: requestData.body ? JSON.stringify({order: requestData.body}): null\r\n//             })\r\n//             if(!response.ok){\r\n//                 throw new error(response.error())\r\n//             }\r\n//             const data = await response.json();\r\n\r\n//             dataHandler(data);\r\n//         }\r\n//         catch(err){\r\n//             setError(err.message || \"some thing went wrong\")\r\n//         }\r\n\r\n//         setIsLoading(false);\r\n//     }\r\n\r\n//     return ({error, isLoading, fetchData});\r\n// }"],"mappings":"AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}